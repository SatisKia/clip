#任意の実数xおよびn≧2について、Bessel関数Jn(x)の値を返す
#\!- <n> <x>
:params n x

:define ACC 40.0 # 精度を良くするにはACCを増す
:define BIGNO 1.0e10
:define BIGNI 1.0e-10

:var j jsum m
:var ax bj bjm bjp sum tox ans

ax=abs(x)
if ax == 0.0
	return 0.0
elif ax > n # J0、J1から上向きに漸化式を使う
	tox=2.0/ax
	bjm=!bessj0(ax)
	bj=!bessj1(ax)
	for j=1;j<n;j++
		bjp=j*tox*bj-bjm
		bjm=bj
		bj=bjp
	next
	ans=bj
else # ここで求める偶数mから下向きに漸化式を使う
	tox=2.0/ax
	m=2*int((n+int sqrt(ACC*n))/2)
	jsum=0 # jsumは値0、!0を交互にとる
	bjp=ans=sum=0.0
	bj=1.0
	for j=m;j>0;j-- # 下向きの漸化式
		bjm=j*tox*bj-bjp
		bjp=bj
		bj=bjm
		if abs(bj) > BIGNO # 桁あふれを避けるため再規格化
			bj *= BIGNI
			bjp *= BIGNI
			ans *= BIGNI
			sum *= BIGNI
		endif
		if jsum; sum += bj; endif # 和を加え上げる
		jsum=[!]jsum # 0、!0を交代
		if j == n; ans=bjp; endif # 規格化前の答えを保存
	next
	sum=2.0*sum-bj
	ans /= sum # 答えを規格化する
endif
return x < 0.0 && (n & 1) ? ([-]ans) ans
