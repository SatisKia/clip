#月齢（満ち欠け）を計算する
#\!- <n> <nph> <jd> <frac>
:params n nph &jd &frac

# 整数nと、求めたい相nph（0で新月、1で上弦の月、2で満月、3で下弦の月）
# を与えると、1990年1月以来n回目のその相のユリウス日の
# 整数部分jd、小数部分fracを返す。グリニッジ標準時を仮定する。

:define RAD (3.14159265/180.0)

:var ii
:var am as c t t2 xtra

c=n+nph/4.0
t=c/1236.85
t2=t*t
as=359.2242+29.105356*c
am=306.0253+385.816918*c+0.010730*t2
jd=2415020+28*n+7*nph
xtra=0.75933+1.53058868*c+((1.178e-4)-(1.55e-7)*t)*t2
if nph == 0 || nph == 2
	xtra += (0.1734-3.93e-4*t)*sin(RAD*as)-0.4068*sin(RAD*am)
elif nph == 1 || nph == 3
	xtra += (0.1721-4.0e-4*t)*sin(RAD*as)-0.6280*sin(RAD*am)
else; return FALSE
endif
ii=(xtra >= 0.0 ? (int floor xtra) (int ceil(xtra-1.0)))
jd += ii
frac=xtra-ii
return TRUE
